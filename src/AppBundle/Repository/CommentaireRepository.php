<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Prestataire;
use Doctrine\ORM\QueryBuilder;

/**
 * CommentaireRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentaireRepository extends \Doctrine\ORM\EntityRepository
{
    public function findCommentairesByIdPrestataire( $prestataireId)
    {
        /**@var QueryBuilder $qb */
        $qb = $this->createQueryBuilder('c');
        $this->addAllJoins($qb);

        $qb = $this->addWherePrestataire($qb,$prestataireId);

        $qb->orderBy('c.encodage','DESC');

        return $this->getResult($qb);
    }

    public function addAllJoins($qb)
    {
        /**@var QueryBuilder $qb*/
        $qb->leftJoin('c.auteurCommentaire','a')->addSelect('a');
    }

    public function getCoteFromPrest($prestataireId)
    {
        /**@var QueryBuilder $qb */
        $qb = $this->createQueryBuilder('c');

        $qb = $this->addWherePrestataire($qb,$prestataireId);

        $qb->expr()->isNotNull('c.cote');

        $qb->select('c.cote');

        return $this->getResult($qb);

    }

    public function addWherePrestataire($qb, $prestataireId)
    {
        /**@var QueryBuilder $qb */

        $qb->where('c.cibleCommentaire = :cible');
        $qb->setParameter('cible', $prestataireId);
        return $qb;
    }

    public function getResult($qb)
    {
        /**@var QueryBuilder $qb */

        $query = $qb->getQuery();
        return $query->getResult();
    }

}
